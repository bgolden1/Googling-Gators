{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","ZipStream","StreamBuf","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","exists","Error","stream","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","tableXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","vmlDrawings","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","entry","path","push","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","vmlDrawing","themes","toString","console","warn","_createInputStream","promises","ZipReader","getEntryType","match","entryPath","parseRels","parseWorkbook","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","_processWorksheetEntry","_processWorksheetRelsEntry","_processThemeEntry","_processMediaEntry","_processDrawingEntry","_processCommentEntry","_processTableEntry","_processDrawingRelsEntry","_processVmlDrawingEntry","autodrain","all","emit","zipStream","undefined","base64","Buffer","from","write","end","zip","map","append","dataimg64","content","substring","indexOf","relsXform","prepare","xml","toXml","tableXml","target","theme1","Type","RelType","OfficeDocument","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addTables","addThemes","addStyles","addMedia","addApp","addCore","addWorkbook","_finalize","createWriteStream","then","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst ZipStream = require('../utils/zip-stream');\r\nconst StreamBuf = require('../utils/stream-buf');\r\n\r\nconst utils = require('../utils/utils');\r\nconst XmlStream = require('../utils/xml-stream');\r\n\r\nconst StylesXform = require('./xform/style/styles-xform');\r\n\r\nconst CoreXform = require('./xform/core/core-xform');\r\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\r\nconst RelationshipsXform = require('./xform/core/relationships-xform');\r\nconst ContentTypesXform = require('./xform/core/content-types-xform');\r\nconst AppXform = require('./xform/core/app-xform');\r\nconst WorkbookXform = require('./xform/book/workbook-xform');\r\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\r\nconst DrawingXform = require('./xform/drawing/drawing-xform');\r\nconst TableXform = require('./xform/table/table-xform');\r\nconst CommentsXform = require('./xform/comment/comments-xform');\r\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\r\n\r\nconst theme1Xml = require('./xml/theme1.js');\r\n\r\nfunction fsReadFileAsync(filename, options) {\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(filename, options, (error, data) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nclass XLSX {\r\n  constructor(workbook) {\r\n    this.workbook = workbook;\r\n  }\r\n\r\n  // ===============================================================================\r\n  // Workbook\r\n  // =========================================================================\r\n  // Read\r\n\r\n  async readFile(filename, options) {\r\n    if (!(await utils.fs.exists(filename))) {\r\n      throw new Error(`File not found: ${filename}`);\r\n    }\r\n    const stream = fs.createReadStream(filename);\r\n    try {\r\n      const workbook = await this.read(stream, options);\r\n      stream.close();\r\n      return workbook;\r\n    } catch (error) {\r\n      stream.close();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  parseRels(stream) {\r\n    const xform = new RelationshipsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseWorkbook(stream) {\r\n    const xform = new WorkbookXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseSharedStrings(stream) {\r\n    const xform = new SharedStringsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform(options);\r\n    const drawingXform = new DrawingXform();\r\n    const tableXform = new TableXform();\r\n\r\n    workbookXform.reconcile(model);\r\n\r\n    // reconcile drawings with their rels\r\n    const drawingOptions = {\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n    };\r\n    Object.keys(model.drawings).forEach(name => {\r\n      const drawing = model.drawings[name];\r\n      const drawingRel = model.drawingRels[name];\r\n      if (drawingRel) {\r\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\r\n          o[rel.Id] = rel;\r\n          return o;\r\n        }, {});\r\n        (drawing.anchors || []).forEach(anchor => {\r\n          const hyperlinks = anchor.picture && anchor.picture.hyperlinks;\r\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\r\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\r\n            delete hyperlinks.rId;\r\n          }\r\n        });\r\n        drawingXform.reconcile(drawing, drawingOptions);\r\n      }\r\n    });\r\n\r\n    // reconcile tables with the default styles\r\n    const tableOptions = {\r\n      styles: model.styles,\r\n    };\r\n    Object.values(model.tables).forEach(table => {\r\n      tableXform.reconcile(table, tableOptions);\r\n    });\r\n\r\n    const sheetOptions = {\r\n      styles: model.styles,\r\n      sharedStrings: model.sharedStrings,\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n      date1904: model.properties && model.properties.date1904,\r\n      drawings: model.drawings,\r\n      comments: model.comments,\r\n      tables: model.tables,\r\n      vmlDrawings: model.vmlDrawings,\r\n    };\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\r\n      worksheetXform.reconcile(worksheet, sheetOptions);\r\n    });\r\n\r\n    // delete unnecessary parts\r\n    delete model.worksheetHash;\r\n    delete model.worksheetRels;\r\n    delete model.globalRels;\r\n    delete model.sharedStrings;\r\n    delete model.workbookRels;\r\n    delete model.sheetDefs;\r\n    delete model.styles;\r\n    delete model.mediaIndex;\r\n    delete model.drawings;\r\n    delete model.drawingRels;\r\n    delete model.vmlDrawings;\r\n  }\r\n\r\n  async _processWorksheetEntry(entry, model, sheetNo, options) {\r\n    const xform = new WorksheetXform(options);\r\n    const worksheet = await xform.parseStream(entry);\r\n    worksheet.sheetNo = sheetNo;\r\n    model.worksheetHash[entry.path] = worksheet;\r\n    model.worksheets.push(worksheet);\r\n  }\r\n\r\n  async _processCommentEntry(entry, model, name) {\r\n    const xform = new CommentsXform();\r\n    const comments = await xform.parseStream(entry);\r\n    model.comments[`../${name}.xml`] = comments;\r\n  }\r\n\r\n  async _processTableEntry(entry, model, name) {\r\n    const xform = new TableXform();\r\n    const table = await xform.parseStream(entry);\r\n    model.tables[`../tables/${name}.xml`] = table;\r\n  }\r\n\r\n  async _processWorksheetRelsEntry(entry, model, sheetNo) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(entry);\r\n    model.worksheetRels[sheetNo] = relationships;\r\n  }\r\n\r\n  async _processMediaEntry(entry, model, filename) {\r\n    const lastDot = filename.lastIndexOf('.');\r\n    // if we can't determine extension, ignore it\r\n    if (lastDot >= 1) {\r\n      const extension = filename.substr(lastDot + 1);\r\n      const name = filename.substr(0, lastDot);\r\n      await new Promise((resolve, reject) => {\r\n        const streamBuf = new StreamBuf();\r\n        streamBuf.on('finish', () => {\r\n          model.mediaIndex[filename] = model.media.length;\r\n          model.mediaIndex[name] = model.media.length;\r\n          const medium = {\r\n            type: 'image',\r\n            name,\r\n            extension,\r\n            buffer: streamBuf.toBuffer(),\r\n          };\r\n          model.media.push(medium);\r\n          resolve();\r\n        });\r\n        entry.on('error', error => {\r\n          reject(error);\r\n        });\r\n        entry.pipe(streamBuf);\r\n      });\r\n    }\r\n  }\r\n\r\n  async _processDrawingEntry(entry, model, name) {\r\n    const xform = new DrawingXform();\r\n    const drawing = await xform.parseStream(entry);\r\n    model.drawings[name] = drawing;\r\n  }\r\n\r\n  async _processDrawingRelsEntry(entry, model, name) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(entry);\r\n    model.drawingRels[name] = relationships;\r\n  }\r\n\r\n  async _processVmlDrawingEntry(entry, model, name) {\r\n    const xform = new VmlNotesXform();\r\n    const vmlDrawing = await xform.parseStream(entry);\r\n    model.vmlDrawings[`../drawings/${name}.vml`] = vmlDrawing;\r\n  }\r\n\r\n  async _processThemeEntry(entry, model, name) {\r\n    await new Promise((resolve, reject) => {\r\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\r\n      const stream = new StreamBuf();\r\n      entry.on('error', reject);\r\n      stream.on('error', reject);\r\n      stream.on('finish', () => {\r\n        model.themes[name] = stream.read().toString();\r\n        resolve();\r\n      });\r\n      entry.pipe(stream);\r\n    });\r\n  }\r\n\r\n   /**\r\n   * @deprecated since version 4.0. You should use `#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\r\n   */\r\n  createInputStream(options) {\r\n    console.warn('`XLSX#createInputStream` is deprecated. You should use `XLSX#read` instead. This method will be removed in version 4.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md');\r\n    return this._createInputStream(options);\r\n  }\r\n\r\n  _createInputStream(options) {\r\n    const model = {\r\n      worksheets: [],\r\n      worksheetHash: {},\r\n      worksheetRels: [],\r\n      themes: {},\r\n      media: [],\r\n      mediaIndex: {},\r\n      drawings: {},\r\n      drawingRels: {},\r\n      comments: {},\r\n      tables: {},\r\n      vmlDrawings: {},\r\n    };\r\n\r\n    // we have to be prepared to read the zip entries in whatever order they arrive\r\n    const promises = [];\r\n    const stream = new ZipStream.ZipReader({\r\n      getEntryType: path => (path.match(/xl\\/media\\//) ? 'nodebuffer' : 'string'),\r\n    });\r\n    stream.on('entry', entry => {\r\n      promises.push(\r\n        (async () => {\r\n          try {\r\n            let entryPath = entry.path;\r\n            if (entryPath[0] === '/') {\r\n              entryPath = entryPath.substr(1);\r\n            }\r\n            switch (entryPath) {\r\n              case '_rels/.rels':\r\n                model.globalRels = await this.parseRels(entry);\r\n                break;\r\n\r\n              case 'xl/workbook.xml': {\r\n                const workbook = await this.parseWorkbook(entry);\r\n                model.sheets = workbook.sheets;\r\n                model.definedNames = workbook.definedNames;\r\n                model.views = workbook.views;\r\n                model.properties = workbook.properties;\r\n                model.calcProperties = workbook.calcProperties;\r\n                break;\r\n              }\r\n\r\n              case 'xl/_rels/workbook.xml.rels':\r\n                model.workbookRels = await this.parseRels(entry);\r\n                break;\r\n\r\n              case 'xl/sharedStrings.xml':\r\n                model.sharedStrings = new SharedStringsXform();\r\n                await model.sharedStrings.parseStream(entry);\r\n                break;\r\n\r\n              case 'xl/styles.xml':\r\n                model.styles = new StylesXform();\r\n                await model.styles.parseStream(entry);\r\n                break;\r\n\r\n              case 'docProps/app.xml': {\r\n                const appXform = new AppXform();\r\n                const appProperties = await appXform.parseStream(entry);\r\n                model.company = appProperties.company;\r\n                model.manager = appProperties.manager;\r\n                break;\r\n              }\r\n\r\n              case 'docProps/core.xml': {\r\n                const coreXform = new CoreXform();\r\n                const coreProperties = await coreXform.parseStream(entry);\r\n                Object.assign(model, coreProperties);\r\n                break;\r\n              }\r\n\r\n              default: {\r\n                let match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\r\n                if (match) {\r\n                  await this._processWorksheetEntry(entry, model, match[1], options);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\r\n                if (match) {\r\n                  await this._processWorksheetRelsEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\r\n                if (match) {\r\n                  await this._processThemeEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\r\n                if (match) {\r\n                  await this._processMediaEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\r\n                if (match) {\r\n                  await this._processDrawingEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/(comments\\d+)[.]xml/);\r\n                if (match) {\r\n                  await this._processCommentEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/tables\\/(table\\d+)[.]xml/);\r\n                if (match) {\r\n                  await this._processTableEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\r\n                if (match) {\r\n                  await this._processDrawingRelsEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n                match = entry.path.match(/xl\\/drawings\\/(vmlDrawing\\d+)[.]vml/);\r\n                if (match) {\r\n                  await this._processVmlDrawingEntry(entry, model, match[1]);\r\n                  break;\r\n                }\r\n\r\n                entry.autodrain();\r\n              }\r\n            }\r\n          } catch (error) {\r\n            this.error = error;\r\n          }\r\n        })()\r\n      );\r\n    });\r\n    stream.on('finished', async () => {\r\n      try {\r\n        await Promise.all(promises);\r\n        if (this.error) throw this.error;\r\n        this.reconcile(model, options);\r\n\r\n        // apply model\r\n        this.workbook.model = model;\r\n        stream.emit('done');\r\n      } catch (error) {\r\n        stream.emit('error', error);\r\n      }\r\n    });\r\n    return stream;\r\n  }\r\n\r\n  read(stream, options) {\r\n    return new Promise((resolve, reject) => {\r\n      options = options || {};\r\n      const zipStream = this._createInputStream(options);\r\n      zipStream\r\n        .on('done', () => {\r\n          resolve(this.workbook);\r\n        })\r\n        .on('error', error => {\r\n          reject(error);\r\n        });\r\n      stream.pipe(zipStream);\r\n    });\r\n  }\r\n\r\n  load(data, options) {\r\n    if (options === undefined) {\r\n      options = {};\r\n    }\r\n    const zipStream = this._createInputStream();\r\n    return new Promise((resolve, reject) => {\r\n      zipStream\r\n        .on('done', () => {\r\n          resolve(this.workbook);\r\n        })\r\n        .on('error', error => {\r\n          reject(error);\r\n        });\r\n\r\n      if (options.base64) {\r\n        const buffer = Buffer.from(data.toString(), 'base64');\r\n        zipStream.write(buffer);\r\n      } else {\r\n        zipStream.write(data);\r\n      }\r\n      zipStream.end();\r\n    });\r\n  }\r\n\r\n  // =========================================================================\r\n  // Write\r\n\r\n  async addMedia(zip, model) {\r\n    await Promise.all(\r\n      model.media.map(async medium => {\r\n        if (medium.type === 'image') {\r\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\r\n          if (medium.filename) {\r\n            const data = await fsReadFileAsync(medium.filename);\r\n            return zip.append(data, {name: filename});\r\n          }\r\n          if (medium.buffer) {\r\n            return zip.append(medium.buffer, {name: filename});\r\n          }\r\n          if (medium.base64) {\r\n            const dataimg64 = medium.base64;\r\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\r\n            return zip.append(content, {name: filename, base64: true});\r\n          }\r\n        }\r\n        throw new Error('Unsupported media');\r\n      })\r\n    );\r\n  }\r\n\r\n  addDrawings(zip, model) {\r\n    const drawingXform = new DrawingXform();\r\n    const relsXform = new RelationshipsXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {drawing} = worksheet;\r\n      if (drawing) {\r\n        drawingXform.prepare(drawing, {});\r\n        let xml = drawingXform.toXml(drawing);\r\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\r\n\r\n        xml = relsXform.toXml(drawing.rels);\r\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\r\n      }\r\n    });\r\n  }\r\n\r\n  addTables(zip, model) {\r\n    const tableXform = new TableXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {tables} = worksheet;\r\n      tables.forEach(table => {\r\n        tableXform.prepare(table, {});\r\n        const tableXml = tableXform.toXml(table);\r\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\r\n      });\r\n    });\r\n  }\r\n\r\n  async addContentTypes(zip, model) {\r\n    const xform = new ContentTypesXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: '[Content_Types].xml'});\r\n  }\r\n\r\n  async addApp(zip, model) {\r\n    const xform = new AppXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: 'docProps/app.xml'});\r\n  }\r\n\r\n  async addCore(zip, model) {\r\n    const coreXform = new CoreXform();\r\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\r\n  }\r\n\r\n  async addThemes(zip, model) {\r\n    const themes = model.themes || {theme1: theme1Xml};\r\n    Object.keys(themes).forEach(name => {\r\n      const xml = themes[name];\r\n      const path = `xl/theme/${name}.xml`;\r\n      zip.append(xml, {name: path});\r\n    });\r\n  }\r\n\r\n  async addOfficeRels(zip) {\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml([\r\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\r\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\r\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\r\n    ]);\r\n    zip.append(xml, {name: '_rels/.rels'});\r\n  }\r\n\r\n  async addWorkbookRels(zip, model) {\r\n    let count = 1;\r\n    const relationships = [\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\r\n    ];\r\n    if (model.sharedStrings.count) {\r\n      relationships.push({Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml'});\r\n    }\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.rId = `rId${count++}`;\r\n      relationships.push({Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\r\n    });\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml(relationships);\r\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\r\n  }\r\n\r\n  async addSharedStrings(zip, model) {\r\n    if (model.sharedStrings && model.sharedStrings.count) {\r\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\r\n    }\r\n  }\r\n\r\n  async addStyles(zip, model) {\r\n    const {xml} = model.styles;\r\n    if (xml) {\r\n      zip.append(xml, {name: 'xl/styles.xml'});\r\n    }\r\n  }\r\n\r\n  async addWorkbook(zip, model) {\r\n    const xform = new WorkbookXform();\r\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\r\n  }\r\n\r\n  async addWorksheets(zip, model) {\r\n    // preparation phase\r\n    const worksheetXform = new WorksheetXform();\r\n    const relationshipsXform = new RelationshipsXform();\r\n    const commentsXform = new CommentsXform();\r\n    const vmlNotesXform = new VmlNotesXform();\r\n\r\n    // write sheets\r\n    model.worksheets.forEach(worksheet => {\r\n      let xmlStream = new XmlStream();\r\n      worksheetXform.render(xmlStream, worksheet);\r\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\r\n\r\n      if (worksheet.rels && worksheet.rels.length) {\r\n        xmlStream = new XmlStream();\r\n        relationshipsXform.render(xmlStream, worksheet.rels);\r\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\r\n      }\r\n\r\n      if (worksheet.comments.length > 0) {\r\n        xmlStream = new XmlStream();\r\n        commentsXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\r\n\r\n        xmlStream = new XmlStream();\r\n        vmlNotesXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\r\n      }\r\n    });\r\n  }\r\n\r\n  _finalize(zip) {\r\n    return new Promise((resolve, reject) => {\r\n      zip.on('finish', () => {\r\n        resolve(this);\r\n      });\r\n      zip.on('error', reject);\r\n      zip.finalize();\r\n    });\r\n  }\r\n\r\n  prepareModel(model, options) {\r\n    // ensure following properties have sane values\r\n    model.creator = model.creator || 'ExcelJS';\r\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\r\n    model.created = model.created || new Date();\r\n    model.modified = model.modified || new Date();\r\n\r\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\r\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\r\n\r\n    // Manage the shared strings\r\n    model.sharedStrings = new SharedStringsXform();\r\n\r\n    // add a style manager to handle cell formats, fonts, etc.\r\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\r\n\r\n    // prepare all of the things before the render\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform();\r\n\r\n    workbookXform.prepare(model);\r\n\r\n    const worksheetOptions = {\r\n      sharedStrings: model.sharedStrings,\r\n      styles: model.styles,\r\n      date1904: model.properties.date1904,\r\n      drawingsCount: 0,\r\n      media: model.media,\r\n    };\r\n    worksheetOptions.drawings = model.drawings = [];\r\n    worksheetOptions.commentRefs = model.commentRefs = [];\r\n    let tableCount = 0;\r\n    model.tables = [];\r\n    model.worksheets.forEach(worksheet => {\r\n      // assign unique filenames to tables\r\n      worksheet.tables.forEach(table => {\r\n        tableCount++;\r\n        table.target = `table${tableCount}.xml`;\r\n        table.id = tableCount;\r\n        model.tables.push(table);\r\n      });\r\n\r\n      worksheetXform.prepare(worksheet, worksheetOptions);\r\n    });\r\n\r\n    // TODO: workbook drawing list\r\n  }\r\n\r\n  async write(stream, options) {\r\n    options = options || {};\r\n    const {model} = this.workbook;\r\n    const zip = new ZipStream.ZipWriter(options.zip);\r\n    zip.pipe(stream);\r\n\r\n    this.prepareModel(model, options);\r\n\r\n    // render\r\n    await this.addContentTypes(zip, model);\r\n    await this.addOfficeRels(zip, model);\r\n    await this.addWorkbookRels(zip, model);\r\n    await this.addWorksheets(zip, model);\r\n    await this.addSharedStrings(zip, model); // always after worksheets\r\n    await this.addDrawings(zip, model);\r\n    await this.addTables(zip, model);\r\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\r\n    await this.addMedia(zip, model);\r\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\r\n    await this.addWorkbook(zip, model);\r\n    return this._finalize(zip);\r\n  }\r\n\r\n  writeFile(filename, options) {\r\n    const stream = fs.createWriteStream(filename);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('finish', () => {\r\n        resolve();\r\n      });\r\n      stream.on('error', error => {\r\n        reject(error);\r\n      });\r\n\r\n      this.write(stream, options).then(() => {\r\n        stream.end();\r\n      });\r\n    });\r\n  }\r\n\r\n  async writeBuffer(options) {\r\n    const stream = new StreamBuf();\r\n    await this.write(stream, options);\r\n    return stream.read();\r\n  }\r\n}\r\n\r\nXLSX.RelType = require('./rel-type');\r\n\r\nmodule.exports = XLSX;\r\n"],"file":"xlsx.js"}