{"version":3,"sources":["../../../../lib/stream/xlsx/hyperlink-reader.js"],"names":["require","EventEmitter","SAXStream","Enums","RelType","HyperlinkReader","workbook","id","_workbook","fn","hyperlinks","forEach","entry","options","emitHyperlinks","autodrain","emit","saxStream","on","events","eventType","value","node","name","rId","attributes","Id","Type","Hyperlink","relationship","type","RelationshipType","Styles","target","Target","targetMode","TargetMode","pipe","length","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAuBA,OAAO,CAAC,QAAD,C;IAAvBC,Y,YAAAA,Y;;AACP,IAAMC,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAzB;;AAEA,IAAMG,KAAK,GAAGH,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,qBAAD,CAAvB;;IAEMK,e;;;;;AACJ,2BAAYC,QAAZ,EAAsBC,EAAtB,EAA0B;AAAA;;AAAA;;AACxB,8BADwB,CAGxB;;AACA,UAAKA,EAAL,GAAUA,EAAV;AAEA,UAAKC,SAAL,GAAiBF,QAAjB;AANwB;AAOzB;;;;yBAMIG,E,EAAI;AACP,aAAO,KAAKC,UAAL,CAAgBC,OAAhB,CAAwBF,EAAxB,CAAP;AACD;;;yBAEIG,K,EAAOC,O,EAAS;AAAA;;AACnB,UAAIC,cAAc,GAAG,KAArB;AACA,UAAIJ,UAAU,GAAG,IAAjB;;AACA,cAAQG,OAAO,CAACH,UAAhB;AACE,aAAK,MAAL;AACEI,UAAAA,cAAc,GAAG,IAAjB;AACA;;AACF,aAAK,OAAL;AACE,eAAKJ,UAAL,GAAkBA,UAAU,GAAG,EAA/B;AACA;;AACF;AACE;AARJ;;AAWA,UAAI,CAACI,cAAD,IAAmB,CAACJ,UAAxB,EAAoC;AAClCE,QAAAA,KAAK,CAACG,SAAN;AACA,aAAKC,IAAL,CAAU,UAAV;AACA;AACD;;AAED,UAAMC,SAAS,GAAG,IAAIf,SAAJ,CAAc,CAAC,SAAD,CAAd,CAAlB;AACAe,MAAAA,SAAS,CAACC,EAAV,CAAa,MAAb,EAAqB,UAAAC,MAAM,EAAI;AAAA,mDACIA,MADJ;AAAA;;AAAA;AAC7B,8DAAyC;AAAA;AAAA,gBAA7BC,SAA6B,eAA7BA,SAA6B;AAAA,gBAAlBC,KAAkB,eAAlBA,KAAkB;;AACvC,gBAAID,SAAS,KAAK,SAAlB,EAA6B;AAC3B,kBAAME,IAAI,GAAGD,KAAb;;AACA,kBAAIC,IAAI,CAACC,IAAL,KAAc,cAAlB,EAAkC;AAChC,oBAAMC,GAAG,GAAGF,IAAI,CAACG,UAAL,CAAgBC,EAA5B;;AACA,wBAAQJ,IAAI,CAACG,UAAL,CAAgBE,IAAxB;AACE,uBAAKvB,OAAO,CAACwB,SAAb;AACE;AACE,0BAAMC,YAAY,GAAG;AACnBC,wBAAAA,IAAI,EAAE3B,KAAK,CAAC4B,gBAAN,CAAuBC,MADV;AAEnBR,wBAAAA,GAAG,EAAHA,GAFmB;AAGnBS,wBAAAA,MAAM,EAAEX,IAAI,CAACG,UAAL,CAAgBS,MAHL;AAInBC,wBAAAA,UAAU,EAAEb,IAAI,CAACG,UAAL,CAAgBW;AAJT,uBAArB;;AAMA,0BAAItB,cAAJ,EAAoB;AAClB,wBAAA,MAAI,CAACE,IAAL,CAAU,WAAV,EAAuBa,YAAvB;AACD,uBAFD,MAEO;AACLnB,wBAAAA,UAAU,CAACmB,YAAY,CAACL,GAAd,CAAV,GAA+BK,YAA/B;AACD;AACF;AACD;;AAEF;AACE;AAlBJ;AAoBD;AACF;AACF;AA5B4B;AAAA;AAAA;AAAA;AAAA;AA6B9B,OA7BD;AA8BAZ,MAAAA,SAAS,CAACC,EAAV,CAAa,KAAb,EAAoB,YAAM;AACxB,QAAA,MAAI,CAACF,IAAL,CAAU,UAAV;AACD,OAFD;AAGAJ,MAAAA,KAAK,CAACyB,IAAN,CAAWpB,SAAX;AACD;;;wBA/DW;AACV,aAAQ,KAAKP,UAAL,IAAmB,KAAKA,UAAL,CAAgB4B,MAApC,IAA+C,CAAtD;AACD;;;;EAZ2BrC,Y;;AA4E9BsC,MAAM,CAACC,OAAP,GAAiBnC,eAAjB","sourcesContent":["const {EventEmitter} = require('events');\r\nconst SAXStream = require('../../utils/sax-stream');\r\n\r\nconst Enums = require('../../doc/enums');\r\nconst RelType = require('../../xlsx/rel-type');\r\n\r\nclass HyperlinkReader extends EventEmitter {\r\n  constructor(workbook, id) {\r\n    super();\r\n\r\n    // in a workbook, each sheet will have a number\r\n    this.id = id;\r\n\r\n    this._workbook = workbook;\r\n  }\r\n\r\n  get count() {\r\n    return (this.hyperlinks && this.hyperlinks.length) || 0;\r\n  }\r\n\r\n  each(fn) {\r\n    return this.hyperlinks.forEach(fn);\r\n  }\r\n\r\n  read(entry, options) {\r\n    let emitHyperlinks = false;\r\n    let hyperlinks = null;\r\n    switch (options.hyperlinks) {\r\n      case 'emit':\r\n        emitHyperlinks = true;\r\n        break;\r\n      case 'cache':\r\n        this.hyperlinks = hyperlinks = {};\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!emitHyperlinks && !hyperlinks) {\r\n      entry.autodrain();\r\n      this.emit('finished');\r\n      return;\r\n    }\r\n\r\n    const saxStream = new SAXStream(['opentag']);\r\n    saxStream.on('data', events => {\r\n      for (const {eventType, value} of events) {\r\n        if (eventType === 'opentag') {\r\n          const node = value;\r\n          if (node.name === 'Relationship') {\r\n            const rId = node.attributes.Id;\r\n            switch (node.attributes.Type) {\r\n              case RelType.Hyperlink:\r\n                {\r\n                  const relationship = {\r\n                    type: Enums.RelationshipType.Styles,\r\n                    rId,\r\n                    target: node.attributes.Target,\r\n                    targetMode: node.attributes.TargetMode,\r\n                  };\r\n                  if (emitHyperlinks) {\r\n                    this.emit('hyperlink', relationship);\r\n                  } else {\r\n                    hyperlinks[relationship.rId] = relationship;\r\n                  }\r\n                }\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    saxStream.on('end', () => {\r\n      this.emit('finished');\r\n    });\r\n    entry.pipe(saxStream);\r\n  }\r\n}\r\n\r\nmodule.exports = HyperlinkReader;\r\n"],"file":"hyperlink-reader.js"}