{"version":3,"sources":["../../../lib/utils/flow-control.js"],"names":["require","EventEmitter","utils","FlowControl","options","queue","pipes","children","parent","flushing","gc","getTimeout","threshold","undefined","divisor","memory","process","memoryUsage","heapSize","heapTotal","Math","floor","dst","data","encoding","Promise","resolve","reject","write","error","chunk","promises","forEach","pipe","sync","stream","push","_write","end","length","all","callback","e","count","seq","cr","setInterval","stdout","timeout","anime","_animate","setTimeout","clearInterval","corked","_delay","_pipe","shift","setImmediate","_flush","stem","emit","Function","nop","Error","stemFlow","filter","child","on","item","join","some","module","exports"],"mappings":"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","sourcesContent":["const {EventEmitter} = require('events');\r\n\r\nconst utils = require('./utils');\r\n\r\n// =============================================================================\r\n// FlowControl - Used to slow down streaming to manageable speed\r\n// Implements a subset of Stream.Duplex: pipe() and write()\r\nclass FlowControl extends EventEmitter {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = options = options || {};\r\n\r\n    // Buffer queue\r\n    this.queue = [];\r\n\r\n    // Consumer streams\r\n    this.pipes = [];\r\n\r\n    // Down-stream flow-control instances\r\n    this.children = [];\r\n\r\n    // Up-stream flow-control instances\r\n    this.parent = options.parent;\r\n\r\n    // Ensure we don't flush more than once at a time\r\n    this.flushing = false;\r\n\r\n    // determine timeout for flow control delays\r\n    if (options.gc) {\r\n      const {gc} = options;\r\n      if (gc.getTimeout) {\r\n        this.getTimeout = gc.getTimeout;\r\n      } else {\r\n        // heap size below which we don't bother delaying\r\n        const threshold = gc.threshold !== undefined ? gc.threshold : 150000000;\r\n        // convert from heapsize to ms timeout\r\n        const divisor = gc.divisor !== undefined ? gc.divisor : 500000;\r\n        this.getTimeout = function() {\r\n          const memory = process.memoryUsage();\r\n          const heapSize = memory.heapTotal;\r\n          return heapSize < threshold ? 0 : Math.floor(heapSize / divisor);\r\n        };\r\n      }\r\n    } else {\r\n      this.getTimeout = null;\r\n    }\r\n  }\r\n\r\n  get name() {\r\n    return ['FlowControl', this.parent ? 'Child' : 'Root', this.corked ? 'corked' : 'open'].join(' ');\r\n  }\r\n\r\n  get corked() {\r\n    // We remain corked while we have children and at least one has data to consume\r\n    return this.children.length > 0 && this.children.some(child => child.queue && child.queue.length);\r\n  }\r\n\r\n  get stem() {\r\n    // the decision to stem the incoming data depends on whether the children are corked\r\n    // and how many buffers we have backed up\r\n    return this.corked || !this.queue || this.queue.length > 2;\r\n  }\r\n\r\n  _write(dst, data, encoding) {\r\n    // Write to a single destination and return a promise\r\n\r\n    return new Promise((resolve, reject) => {\r\n      dst.write(data, encoding, error => {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async _pipe(chunk) {\r\n    // Write chunk to all pipes. A chunk with no data is the end\r\n    const promises = [];\r\n    this.pipes.forEach(pipe => {\r\n      if (chunk.data) {\r\n        if (pipe.sync) {\r\n          pipe.stream.write(chunk.data, chunk.encoding);\r\n        } else {\r\n          promises.push(this._write(pipe.stream, chunk.data, chunk.encoding));\r\n        }\r\n      } else {\r\n        pipe.stream.end();\r\n      }\r\n    });\r\n    if (!promises.length) {\r\n      promises.push(Promise.resolve());\r\n    }\r\n    await Promise.all(promises);\r\n    try {\r\n      chunk.callback();\r\n    } catch (e) {\r\n      // quietly ignore\r\n    }\r\n  }\r\n\r\n  _animate() {\r\n    let count = 0;\r\n    const seq = ['|', '/', '-', '\\\\'];\r\n    const cr = '\\u001b[0G'; // was '\\033[0G'\r\n    return setInterval(() => {\r\n      process.stdout.write(seq[count++ % 4] + cr);\r\n    }, 100);\r\n  }\r\n\r\n  _delay() {\r\n    // in certain situations it may be useful to delay processing (e.g. for GC)\r\n    const timeout = this.getTimeout && this.getTimeout();\r\n    if (timeout) {\r\n      return new Promise(resolve => {\r\n        const anime = this._animate();\r\n        setTimeout(() => {\r\n          clearInterval(anime);\r\n          resolve();\r\n        }, timeout);\r\n      });\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async _flush() {\r\n    // If/while not corked and we have buffers to send, send them\r\n    if (this.queue && !this.flushing && !this.corked) {\r\n      if (this.queue.length) {\r\n        this.flushing = true;\r\n        await this._delay();\r\n        await this._pipe(this.queue.shift());\r\n        setImmediate(() => {\r\n          this.flushing = false;\r\n          this._flush();\r\n        });\r\n      }\r\n\r\n      if (!this.stem) {\r\n        // Signal up-stream that we're ready for more data\r\n        this.emit('drain');\r\n      }\r\n    }\r\n  }\r\n\r\n  write(data, encoding, callback) {\r\n    // Called by up-stream pipe\r\n    if (encoding instanceof Function) {\r\n      callback = encoding;\r\n      encoding = 'utf8';\r\n    }\r\n    callback = callback || utils.nop;\r\n\r\n    if (!this.queue) {\r\n      throw new Error('Cannot write to stream after end');\r\n    }\r\n\r\n    // Always queue chunks and then flush\r\n    this.queue.push({\r\n      data,\r\n      encoding,\r\n      callback,\r\n    });\r\n    this._flush();\r\n\r\n    // restrict further incoming data if we have backed up buffers or\r\n    // the children are still busy\r\n    const stemFlow = this.corked || this.queue.length > 3;\r\n    return !stemFlow;\r\n  }\r\n\r\n  end() {\r\n    // Signal from up-stream\r\n    this.queue.push({\r\n      callback: () => {\r\n        this.queue = null;\r\n        this.emit('finish');\r\n      },\r\n    });\r\n    this._flush();\r\n  }\r\n\r\n  pipe(stream, options) {\r\n    options = options || {};\r\n\r\n    // some streams don't call callbacks\r\n    const sync = options.sync || false;\r\n\r\n    this.pipes.push({\r\n      stream,\r\n      sync,\r\n    });\r\n  }\r\n\r\n  unpipe(stream) {\r\n    this.pipes = this.pipes.filter(pipe => pipe.stream !== stream);\r\n  }\r\n\r\n  createChild() {\r\n    // Create a down-stream flow-control\r\n    const options = {\r\n      parent: this,\r\n      ...this.options,\r\n    };\r\n    const child = new FlowControl(options);\r\n    this.children.push(child);\r\n\r\n    child.on('drain', () => {\r\n      // a child is ready for more\r\n      this._flush();\r\n    });\r\n\r\n    child.on('finish', () => {\r\n      // One child has finished its stream. Remove it and continue\r\n      this.children = this.children.filter(item => item !== child);\r\n      this._flush();\r\n    });\r\n\r\n    return child;\r\n  }\r\n}\r\n\r\nmodule.exports = FlowControl;\r\n"],"file":"flow-control.js"}