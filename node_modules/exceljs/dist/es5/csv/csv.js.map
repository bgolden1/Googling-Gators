{"version":3,"sources":["../../../lib/csv/csv.js"],"names":["fs","require","fastCsv","customParseFormat","utc","dayjs","extend","StreamBuf","exists","SpecialValues","true","false","error","CSV","workbook","worksheet","filename","options","Error","stream","createReadStream","read","close","Promise","resolve","reject","csvStream","_createInputStream","on","pipe","console","warn","addWorksheet","sheetName","dateFormats","map","datum","datumNumber","Number","isNaN","Infinity","dt","reduce","matchingDate","currentDateFormat","dayjsObj","isValid","Date","valueOf","special","undefined","parse","parserOptions","data","addRow","emit","getWorksheet","sheetId","format","formatterOptions","dateFormat","dateUTC","value","text","hyperlink","formula","result","JSON","stringify","includeEmptyRows","lastRow","eachRow","row","rowNumber","write","values","shift","end","streamOptions","encoding","createWriteStream","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst fastCsv = require('fast-csv');\r\nconst customParseFormat = require('dayjs/plugin/customParseFormat');\r\nconst utc = require('dayjs/plugin/utc');\r\nconst dayjs = require('dayjs')\r\n  .extend(customParseFormat)\r\n  .extend(utc);\r\nconst StreamBuf = require('../utils/stream-buf');\r\n\r\nconst {\r\n  fs: {exists},\r\n} = require('../utils/utils');\r\n\r\n/* eslint-disable quote-props */\r\nconst SpecialValues = {\r\n  true: true,\r\n  false: false,\r\n  '#N/A': {error: '#N/A'},\r\n  '#REF!': {error: '#REF!'},\r\n  '#NAME?': {error: '#NAME?'},\r\n  '#DIV/0!': {error: '#DIV/0!'},\r\n  '#NULL!': {error: '#NULL!'},\r\n  '#VALUE!': {error: '#VALUE!'},\r\n  '#NUM!': {error: '#NUM!'},\r\n};\r\n/* eslint-ensable quote-props */\r\n\r\nclass CSV {\r\n  constructor(workbook) {\r\n    this.workbook = workbook;\r\n    this.worksheet = null;\r\n  }\r\n\r\n  async readFile(filename, options) {\r\n    options = options || {};\r\n    if (!(await exists(filename))) {\r\n      throw new Error(`File not found: ${filename}`);\r\n    }\r\n    const stream = fs.createReadStream(filename);\r\n    const worksheet = await this.read(stream, options);\r\n    stream.close();\r\n    return worksheet;\r\n  }\r\n\r\n  read(stream, options) {\r\n    options = options || {};\r\n    return new Promise((resolve, reject) => {\r\n      const csvStream = this._createInputStream(options)\r\n        .on('worksheet', resolve)\r\n        .on('error', reject);\r\n\r\n      stream.pipe(csvStream);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @deprecated since version 4.0. You should use `CSV#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\r\n   */\r\n  createInputStream(options) {\r\n    console.warn('`CSV#createInputStream` is deprecated. You should use `CSV#read` instead. This method will be removed in version 4.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md');\r\n    return this._createInputStream(options);\r\n  }\r\n\r\n  _createInputStream(options) {\r\n    options = options || {};\r\n    const worksheet = this.workbook.addWorksheet(options.sheetName);\r\n\r\n    const dateFormats = options.dateFormats || ['YYYY-MM-DD[T]HH:mm:ssZ', 'YYYY-MM-DD[T]HH:mm:ss', 'MM-DD-YYYY', 'YYYY-MM-DD'];\r\n    const map =\r\n      options.map ||\r\n      function(datum) {\r\n        if (datum === '') {\r\n          return null;\r\n        }\r\n        const datumNumber = Number(datum);\r\n        if (!Number.isNaN(datumNumber) && datumNumber !== Infinity) {\r\n          return datumNumber;\r\n        }\r\n        const dt = dateFormats.reduce((matchingDate, currentDateFormat) => {\r\n          if (matchingDate) {\r\n            return matchingDate;\r\n          }\r\n          const dayjsObj = dayjs(datum, currentDateFormat, true);\r\n          if (dayjsObj.isValid()) {\r\n            return dayjsObj;\r\n          }\r\n          return null;\r\n        }, null);\r\n        if (dt) {\r\n          return new Date(dt.valueOf());\r\n        }\r\n        const special = SpecialValues[datum];\r\n        if (special !== undefined) {\r\n          return special;\r\n        }\r\n        return datum;\r\n      };\r\n\r\n    const csvStream = fastCsv\r\n      .parse(options.parserOptions)\r\n      .on('data', data => {\r\n        worksheet.addRow(data.map(map));\r\n      })\r\n      .on('end', () => {\r\n        csvStream.emit('worksheet', worksheet);\r\n      });\r\n    return csvStream;\r\n  }\r\n\r\n  write(stream, options) {\r\n    return new Promise((resolve, reject) => {\r\n      options = options || {};\r\n      // const encoding = options.encoding || 'utf8';\r\n      // const separator = options.separator || ',';\r\n      // const quoteChar = options.quoteChar || '\\'';\r\n\r\n      const worksheet = this.workbook.getWorksheet(options.sheetName || options.sheetId);\r\n\r\n      const csvStream = fastCsv.format(options.formatterOptions);\r\n      stream.on('finish', () => {\r\n        resolve();\r\n      });\r\n      csvStream.on('error', reject);\r\n      csvStream.pipe(stream);\r\n\r\n      const {dateFormat, dateUTC} = options;\r\n      const map =\r\n        options.map ||\r\n        (value => {\r\n          if (value) {\r\n            if (value.text || value.hyperlink) {\r\n              return value.hyperlink || value.text || '';\r\n            }\r\n            if (value.formula || value.result) {\r\n              return value.result || '';\r\n            }\r\n            if (value instanceof Date) {\r\n              if (dateFormat) {\r\n                return dateUTC ? dayjs.utc(value).format(dateFormat) : dayjs(value).format(dateFormat);\r\n              }\r\n              return dateUTC ? dayjs.utc(value).format() : dayjs(value).format();\r\n            }\r\n            if (value.error) {\r\n              return value.error;\r\n            }\r\n            if (typeof value === 'object') {\r\n              return JSON.stringify(value);\r\n            }\r\n          }\r\n          return value;\r\n        });\r\n\r\n      const includeEmptyRows = options.includeEmptyRows === undefined || options.includeEmptyRows;\r\n      let lastRow = 1;\r\n      if (worksheet) {\r\n        worksheet.eachRow((row, rowNumber) => {\r\n          if (includeEmptyRows) {\r\n            while (lastRow++ < rowNumber - 1) {\r\n              csvStream.write([]);\r\n            }\r\n          }\r\n          const {values} = row;\r\n          values.shift();\r\n          csvStream.write(values.map(map));\r\n          lastRow = rowNumber;\r\n        });\r\n      }\r\n      csvStream.end();\r\n    });\r\n  }\r\n\r\n  writeFile(filename, options) {\r\n    options = options || {};\r\n\r\n    const streamOptions = {\r\n      encoding: options.encoding || 'utf8',\r\n    };\r\n    const stream = fs.createWriteStream(filename, streamOptions);\r\n\r\n    return this.write(stream, options);\r\n  }\r\n\r\n  async writeBuffer(options) {\r\n    const stream = new StreamBuf();\r\n    await this.write(stream, options);\r\n    return stream.read();\r\n  }\r\n}\r\n\r\nmodule.exports = CSV;\r\n"],"file":"csv.js"}